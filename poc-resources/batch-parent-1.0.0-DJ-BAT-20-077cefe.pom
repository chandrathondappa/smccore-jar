<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
  
	<groupId>com.penske.mis.common</groupId>
	<artifactId>batch-parent</artifactId>
	<version>1.0.0-DJ-BAT-20-077cefe</version>
	<packaging>pom</packaging>
    <name>batch-parent</name>
    	  		
    <parent>	
		<groupId>com.penske.mis.common</groupId>
    	<artifactId>penske-parent</artifactId>
		<version>1.0.0-DJ-PEN-15-260c84e</version>
		<relativePath>./penske-parent-1.0.0-DJ-PEN-15-260c84e.pom</relativePath>
	</parent>

	<!-- Properties -->
	<properties>
		<!-- Maven variables -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Target clean variables -->
		<skipCleanTarget>${env.bamboo_skipCleanTarget}</skipCleanTarget>
		<excludeFileType>${env.bamboo_excludeFileType}</excludeFileType>
      
        <mavenAntrunPlugin>{env.bamboo_mavenAntrunPlugin}</mavenAntrunPlugin>
		
		<!-- Artifactory based variables --> 
		<java.version>1.8</java.version>
		<maven.jar.version>2.6</maven.jar.version>
		
		<!-- Artifactory server configuration-->
		<repository.server.root>https://artifactory.penske.com/artifactory</repository.server.root>
        <development.distribution.url>${repository.server.root}/common-mvn-development-local</development.distribution.url>
      
     	<work_dir>${env.bamboo_build_working_directory}</work_dir>
		<work_subdir>${work_dir}\${env.bamboo_working_subdirectory}</work_subdir>
        <sharedgroupname>${env.bamboo_group_shared_lib}</sharedgroupname>
	</properties>
  
	<profiles>
      <profile>
       <id>bamboo</id>
       <activation>
          <activeByDefault>true</activeByDefault>
       </activation>
        <build>
             <plugins>
                <!-- Antrun plugin -->
                 <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<configuration>
                                    <skip>${mavenAntrunPlugin}</skip>
									<target>
										<ant antfile="/apps/buildCommons/maven/generateManifest.xml" />
										<echo message="Finished Calling Manifest Target" />
									</target>
									<exportAntProperties>true</exportAntProperties>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${work_dir}/repo.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin> 
           
           		<!-- Install plugin -->
                    <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-install-plugin</artifactId>
                      <version>2.5.2</version>
                    </plugin>
           
           		<!-- Deploy plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>2.8.2</version>
                    </plugin>

				<!-- Jar Plugin -->
				 <plugin> 
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven.jar.version}</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>${env.bamboo_batchmainclass}</mainClass>
								</manifest>
								<manifestEntries>
									<Built-By>${env.bamboo_ManualBuildTriggerReason_userName}</Built-By>
									<Built-On>${env.bamboo_buildTimeStamp}</Built-On>
									<Bamboo-Build>${env.bamboo_buildResultsUrl}</Bamboo-Build>
									<Source>${sourceDetails}</Source>
								</manifestEntries>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>create-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin> 
           	
				<!-- Clean plugin -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>auto-clean</id>
								<phase>package</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>								
								<skip>${skipCleanTarget}</skip>
								<excludeDefaultDirectories>true</excludeDefaultDirectories>
								   <filesets>
										<fileset>
											<directory>target</directory>
											<excludes>${excludeFileType}</excludes>
										 </fileset>
									</filesets>
								</configuration> 
							</execution>
						</executions>
					</plugin> 
				</plugins>
		</build>
      </profile>
      
      <profile>
		 <id>shared.group.library</id>
        	<build>
                   <plugins>
                     <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/sharedjars</outputDirectory>
                                    <includeScope>provided</includeScope>
                                </configuration>
                            </execution>
                        </executions>
                      </plugin>

                      <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<configuration>
                                <skip>${mavenAntrunPlugin}</skip>
									<target>
										<ant antfile="/apps/buildCommons/maven/generateManifest.xml" />                                      	
										<echo message="Finished Calling Manifest Target" />
									</target>
									<exportAntProperties>true</exportAntProperties>		
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
                          
                          <!-- added this to create lib_groujpname.txt file for large file deploy process -->                          
                          <execution>
                            <id>groupsharedlib</id>
                            <phase>initialize</phase>
								<configuration>                              
									<target name="createMetaFile">
                                        <mkdir dir="${work_dir}/tmp" />
                                        <touch file="${work_dir}/tmp/lib_${sharedgroupname}.txt" />
                                    </target>
									<exportAntProperties>true</exportAntProperties>		
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>                          
                          <!-- end -->
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${work_dir}/repo.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin> 
                    
                    <!-- Jar Plugin -->
                    <plugin> 
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven.jar.version}</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>${env.bamboo_batchmainclass}</mainClass>
								</manifest>
								<manifestEntries>
									<Built-By>${env.bamboo_ManualBuildTriggerReason_userName}</Built-By>
									<Built-On>${env.bamboo_buildTimeStamp}</Built-On>
									<Bamboo-Build>${env.bamboo_buildResultsUrl}</Bamboo-Build>
									<Source>${sourceDetails}</Source>
								</manifestEntries>
							</archive>
                          	<webResources>
                                <resource>
                                    <directory>${work_dir}/tmp</directory>
                                    <targetPath>META-INF</targetPath>
                                </resource>
                            </webResources> 
						</configuration>
						<executions>
							<execution>
								<id>create-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin> 
           	
				<!-- Clean plugin -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<id>auto-clean</id>
								<phase>package</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>								
								<skip>${skipCleanTarget}</skip>
								<excludeDefaultDirectories>true</excludeDefaultDirectories>
								   <filesets>
										<fileset>
											<directory>target</directory>
											<excludes>${excludeFileType}</excludes>
										 </fileset>
									</filesets>
								</configuration> 
							</execution>
						</executions>
					</plugin> 
				</plugins>
		  </build>
      </profile>
      
      <profile>
         <id>local</id>
			<build>        
				<plugins>
                   <!-- Jar Plugin -->
				   <plugin> 
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>${maven.jar.version}</version>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>${env.bamboo_batchmainclass}</mainClass>
								</manifest>
								<manifestEntries>
									<Built-By>${env.bamboo_ManualBuildTriggerReason_userName}</Built-By>
									<Built-On>${env.bamboo_buildTimeStamp}</Built-On>
									<Bamboo-Build>${env.bamboo_buildResultsUrl}</Bamboo-Build>
									<Source>${sourceDetails}</Source>
								</manifestEntries>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>create-jar</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
                </plugins>
			</build>		 
		 </profile>
    </profiles>
		<distributionManagement>
			<snapshotRepository>
				<id>common-development</id>
				<name>Common Development Repository</name>
				<url>${development.distribution.url}</url>
			</snapshotRepository>
			<repository>
				<id>common-development</id>
				<name>Common Development Repository</name>
				<url>${development.distribution.url}</url>
				<uniqueVersion>false</uniqueVersion>
			</repository>
		</distributionManagement>	
		
</project>
